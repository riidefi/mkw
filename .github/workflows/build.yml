---
on:
  push:
    paths-ignore:
      - 'tests/**'
      - '*.md'
  pull_request:
    paths-ignore:
      - 'tests/**'
      - '*.md'
name: Build
jobs:
  build_windows:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        with:
          python-version: '3.x'
          architecture: 'x64'

      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv
        with:
          requirement_files: requirements.txt

      - uses: syphar/restore-pip-download-cache@v1
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'

      - run: pip install -r requirements.txt
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'

      - name: Extract tooling
        env:
          TOOLS_URL: 'https://cdn.discordapp.com/attachments/767477506861170710/870608469558980649/tools.zip'
        run: |
          # Download tooling
          Invoke-WebRequest "$Env:TOOLS_URL" -OutFile .\tools.zip
          $hash = (Get-FileHash '.\tools.zip').Hash
          if ($hash -ne '2D78EEB2B90A2E57DB4B5DC55F37468B115B344498B8875D2EC8ADDE5AB8B243')
          {
            echo "Invalid hash: $hash"
            exit 1
          }
          # Extract
          Expand-Archive tools.zip
          # Fix paths (tools/tools => tools)
          Move-Item '.\tools' '.\tools2'
          Move-Item '.\tools2\tools' '.\tools'
          # Move blobs
          Move-Item '.\tools\blobs\main.dol' '.\artifacts\orig\pal\main.dol'
          Move-Item '.\tools\blobs\StaticR.rel' '.\artifacts\orig\pal\StaticR.rel'
          # Clean up
          Remove-Item '.\tools.zip'
          Remove-Item -LiteralPath 'tools2' -Force -Recurse

      - name: Build mkw
        shell: bash
        run: python build.py

      - name: Get DOL progress
        run: python -m mkwutil.progress.percent_decompiled --short --part DOL > badge_dol_progress.txt

      - uses: actions/upload-artifact@v3
        with:
          name: badge_dol_progress
          path: badge_dol_progress.txt

      - name: Get REL progress
        run: python -m mkwutil.progress.percent_decompiled --short --part REL > badge_rel_progress.txt

      - uses: actions/upload-artifact@v3
        with:
          name: badge_rel_progress
          path: badge_rel_progress.txt

      - name: Make docs folder
        run: md out/website -ea 0

      - name: Run graphic.py
        run: python -m mkwutil.progress.graphic --silent

      - name: Upload Website Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: website
          path: out/website

      - name: Lint inline ASM
        run: python -m mkwutil.tools.lint_inline_asm --pretty ./source/**/*.c*

  publish:
    runs-on: ubuntu-20.04
    needs: [build_windows]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3

      - name: Download Website Artifacts
        uses: actions/download-artifact@v3
        with:
          name: website
          path: out/website

      - name: Create doxygen dir
        run: mkdir -p out/website/docs

      - uses: mattnotmitt/doxygen-action@v1

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          branch: gh-pages
          folder: out/website
          clean: true
          dry-run: ${{ github.ref != 'refs/heads/master' }}
