---
on:
  push:
    paths-ignore:
      - 'tests/**'
      - '*.md'
  pull_request:
    paths-ignore:
      - 'tests/**'
      - '*.md'
name: Build
jobs:
  build_windows:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'

      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv
        with:
          requirement_files: requirements.txt

      - uses: syphar/restore-pip-download-cache@v1
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'

      - run: pip install -r requirements.txt
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'

      - name: Extract tooling
        env:
          TOOLS_URL: 'https://cdn.discordapp.com/attachments/767477506861170710/870608469558980649/tools.zip'
        run: |
          # Download tooling
          Invoke-WebRequest "$Env:TOOLS_URL" -OutFile .\tools.zip
          $hash = (Get-FileHash '.\tools.zip').Hash
          if ($hash -ne '2D78EEB2B90A2E57DB4B5DC55F37468B115B344498B8875D2EC8ADDE5AB8B243')
          {
            echo "Invalid hash: $hash"
            exit 1
          }
          # Extract
          Expand-Archive tools.zip
          # Fix paths (tools/tools => tools)
          Move-Item '.\tools' '.\tools2'
          Move-Item '.\tools2\tools' '.\tools'
          # Move blobs
          Move-Item '.\tools\blobs\main.dol' '.\artifacts\orig\pal\main.dol'
          Move-Item '.\tools\blobs\StaticR.rel' '.\artifacts\orig\pal\StaticR.rel'
          # Clean up
          Remove-Item '.\tools.zip'
          Remove-Item -LiteralPath 'tools2' -Force -Recurse

      - uses: actions/cache@v2
        with:
          path: asm/dol
          key: asm-dol

      - uses: actions/cache@v2
        with:
          path: asm/rel
          key: asm-rel

      - name: Build mkw
        shell: bash
        run: python ./build.py

  build_linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Install deps
        run: |
          sudo dpkg --add-architecture i386
          # --- Debian Wine
          sudo apt-get update
          # https://github.com/actions/virtual-environments/issues/4589
          sudo apt install -y --allow-downgrades libpcre2-8-0=10.34-7
          sudo apt-get install -y --install-recommends wine wine32 unzip
          # --- WineHQ (broken)
          # wget -nc https://dl.winehq.org/wine-builds/winehq.key
          # sudo apt-key add winehq.key
          # rm winehq.key
          # sudo add-apt-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ focal main'
          # sudo apt-get update
          # sudo apt-get install -y --no-install-recommends winehq-stable unzip

      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'

      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv-linux
        with:
          requirement_files: requirements.txt

      - uses: syphar/restore-pip-download-cache@v1
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'

      - run: pip install -r requirements.txt
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'

      - name: Extract tooling
        env:
          TOOLS_URL: 'https://cdn.discordapp.com/attachments/767477506861170710/870608469558980649/tools.zip'
        run: |
          curl -sSf "$TOOLS_URL" -o ./tools.zip
          echo "2D78EEB2B90A2E57DB4B5DC55F37468B115B344498B8875D2EC8ADDE5AB8B243 tools.zip" | sha256sum --check --status
          unzip -o tools.zip
          chmod +x ./tools/devkitppc/bin/powerpc-eabi-as
          mv ./tools/blobs/* ./artifacts/orig/pal
          rm tools.zip

      - uses: actions/cache@v2
        with:
          path: asm/dol
          key: asm-dol

      - uses: actions/cache@v2
        with:
          path: asm/rel
          key: asm-rel

      - name: Build mkw
        shell: bash
        run: |
          # Create virtual display.
          Xvfb :0 -screen 0 640x480x16 &
          export DISPLAY=:0.0
          python ./build.py -j 32

      - name: Get DOL progress
        run: python -m mkwutil.progress.percent_decompiled --short --part DOL > badge_dol_progress.txt

      - uses: actions/upload-artifact@v2
        with:
          name: badge_dol_progress
          path: badge_dol_progress.txt

      - name: Get REL progress
        run: python -m mkwutil.progress.percent_decompiled --short --part REL > badge_rel_progress.txt

      - uses: actions/upload-artifact@v2
        with:
          name: badge_rel_progress
          path: badge_rel_progress.txt

      - name: Make docs folder
        run: mkdir -p out && mkdir -p website && mkdir -p docs

      - name: Run graphic.py
        run: python -m mkwutil.progress.graphic

      - uses: mattnotmitt/doxygen-action@v1

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: out/website
          clean: true
          dry-run: ${{ github.ref != 'refs/heads/master' }}
