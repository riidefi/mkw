ENTRY(__start)
MEMORY {
text : origin = 0x80004000
}
SECTIONS {
GROUP:{
.init ALIGN(0x20):{}
extab_ ALIGN(0x20):{}
extabindex_ ALIGN(0x20):{}
.text ALIGN(0x20):{}
.ctors ALIGN(0x20):{}
.dtors ALIGN(0x20):{}
.rodata ALIGN(0x20):{}
.data ALIGN(0x20):{}
.bss ALIGN(0x80):{}
.sdata ALIGN(0x20):{}
.sbss ALIGN(0x20):{}
.sdata2 ALIGN(0x20):{}
.sbss2 ALIGN(0x20):{}
.stack ALIGN(0x100):{}
} > text
_stack_addr = (_f_sbss2 + SIZEOF(.sbss2) + 65536 + 0x7) & ~0x7;
_stack_end = _f_sbss2 + SIZEOF(.sbss2);
_db_stack_addr = (_stack_addr + 0x2000);
_db_stack_end = _stack_addr;
__ArenaLo = (_db_stack_addr + 0x1f) & ~0x1f;
__ArenaHi = 0x81700000;

__start = 0x800060A4;
__destroy_global_chain=0x80021350;
__div2i=0x800216F0;

ftell=0x8000c21c;
fseek=0x8000c3e4;
rewind=0x8000c3e8;
fread=0x8000e610;
fwrite=0x8000e614;
fclose=0x8000ec5c;

memmove=0x8000f1f0;
memchr=0x8000f2bc;
memcmp=0x8000f314;
qsort=0x80011b00;
srand=0x80011c90;
printf=0x800116e4;
vprintf=0x800117b0;
vsnprintf=0x8001182c;
vsprintf=0x800118b4;
snprintf=0x80011938;
sprintf=0x80011a2c;
sscanf=0x80013040;
strcpy=0x80013120;
strncpy=0x800131e0;
strcat=0x80013224;
strncat=0x80013250;
strchr=0x800133f8;
strcspn=0x80013428;
strstr=0x800135f0;
strlen=0x80021254;
strcmp=0x8001329c;
strncmp=0x800133b8;
strncasecmp=0x8001bc98;
strcasecmp=0x8001bc9c;
atof=0x80014990;
atoi=0x8001543c;
wcslen=0x80017998;
wcsncpy=0x800179d0;
wcscmp=0x80017a14;
cos=0x8001b590;
sin=0x8001ba98;
tan=0x8001bb64;
sqrt=0x8001bbf4;
__ctype_mapC=0x80270fd0;

_savegpr_14=0x8002156C;
_savegpr_15=0x80021570;
_savegpr_16=0x80021574;
_savegpr_17=0x80021578;
_savegpr_18=0x8002157C;
_savegpr_19=0x80021580;
_savegpr_20=0x80021584;
_savegpr_21=0x80021588;
_savegpr_22=0x8002158C;
_savegpr_23=0x80021590;
_savegpr_24=0x80021594;
_savegpr_25=0x80021598;
_savegpr_26=0x8002159C;
_savegpr_27=0x800215A0;

_restgpr_14=0x800215B8;
_restgpr_15=0x800215BC;
_restgpr_16=0x800215C0;
_restgpr_17=0x800215C4;
_restgpr_18=0x800215C8;
_restgpr_19=0x800215CC;
_restgpr_20=0x800215D0;
_restgpr_21=0x800215D4;
_restgpr_22=0x800215D8;
_restgpr_23=0x800215DC;
_restgpr_24=0x800215E0;
_restgpr_25=0x800215E4;
_restgpr_26=0x800215E8;
_restgpr_27=0x800215EC;
OSReport=0x801A25D0;
_current_locale=0x80271148;

__register_global_object=0x80021338;
sqrt__Q23EGG5MathfFf=0x8022F80C;
frsqrt__Q23EGG5MathfFf=0x8022F85C;
__dt__Q23EGG8Vector3fFv=0x80009B40;
__dt__Q23EGG8Vector2fFv=0x80009B80;
GetRenderModeObj__Q34nw4r3g3d8G3DStateFv=0x80064440;

SocketStartUp=0x800f24c0;
SocketShutDown=0x800f24c4;
current_time=0x800f24c8;
msleep=0x800f2510;
gethostbyname=0x800f164c;
gsCoreIsShutdown=0x800f4114;
gsimalloc=0x800f3860;
gsirealloc=0x800f3870;
gsifree=0x800f3884;
gsiSecondsToDate=0x800f254c;
gsiDateToSeconds=0x800f27b4;
gsiStartResolvingHostname=0x800f2104;
gsiCancelResolvingHostname=0x800f2238;
gsiGetResolvedIP=0x800f2300;

gti2HandleESN=0x8010ad14;
gti2HandleServerChallenge=0x8010ae44;
gti2HandleClientResponse=0x8010b178;
gti2DeliverReliableMessage=0x8010b480;
gti2IncomingBufferMessageCompare=0x8010bc3c;
gti2BufferIncomingMessage=0x8010bc50;
gti2HandleReliableMessage=0x8010bdfc;
gti2HandleNack=0x8010c24c;
gti2HandleUnreliableMessage=0x8010c434;
gti2HandleMessage=0x8010c6fc;
gti2HandleConnectionReset=0x8010cb90;
gti2HandleHostUnreachable=0x8010cda8;
gti2ReceiveMessages=0x8010ced8;
gti2BeginReliableMessage=0x8010d124;
gti2SendClientChallenge=0x8010d4b8;
gti2SendAccept=0x8010d59c;
gti2SendReject=0x8010d664;
gti2SendClose=0x8010d758;
gti2SendKeepAlive=0x8010d820;
gti2SendAppUnreliable=0x8010d8e8;
gti2SendAck=0x8010da14;
gti2SendNack=0x8010dad8;
gti2SendClosed=0x8010dbcc;
gti2ResendMessage=0x8010dc84;
gti2Send=0x8010dd40;

Util_RandSeed=0x800f2ec8;
Util_RandInt=0x800f2ee0;
rand=0x80011c70;
B64Decode=0x800f2f54;
B64Encode=0x800f3278;
B64DecodeLen=0x800f3484;
B64InitEncodeStream=0x800f3528;
B64EncodeStream=0x800f3538;
_UCS2CharToUTF8String=0x800f4680;
UTF8ToUCS2StringLen=0x800f47e4;
goastrdup=0x800f23f4;
_strlwr=0x800f2464;
SetSockBlocking=0x800f1bc8;
SetReceiveBufferSize=0x800f1c40;
CanReceiveOnSocket=0x800f1c9c;
CanSendOnSocket=0x800f1ce4;
getlocalhost=0x800f1d2c;

NNMagicData=0x80385520;
NNFreeNegotiateList=0x8011a7c4;
NNBeginNegotiationWithSocket=0x8011ae3c;
NNCancel=0x8011b158;
NNProcessData=0x8011bf54;
NNThink=0x8011b718;

ghiTrySendThenBuffer=0x8011248c;
ghiSendBufferedData=0x80111de8;

sakeiInitRequest=0x8012249c;
sakeiFreeRequest=0x8012256c;
sakeiCheckSakeResult=0x80122570;
sakeiSoapCallback=0x8012279c;
sakeiSetupRequest=0x80122944;
sakeiStartRequest=0x80122a84;
sakeiValidateRequestFields=0x80122b18;
sakeiFillSoapRequestFieldValues=0x80122bdc;
sakeiCreateRecordValidateInput=0x80122efc;
sakeiCreateRecordFillSoapRequest=0x80122f48;
sakeiCreateRecordProcessSoapResponse=0x80122fa4;
sakeiStartCreateRecordRequest=0x80122fe8;
sakeiUpdateRecordFillSoapRequest=0x80123038;
sakeiStartUpdateRecordRequest=0x801230ac;
sakeiDeleteRecordFillSoapRequest=0x801230d4;
sakeiReadOutputRecords=0x80123138;
sakeiFreeOutputRecords=0x8012365c;
sakeiSearchForRecordsValidateInput=0x80123724;
sakeiSearchForRecordsFillSoapRequest=0x801237c4;
sakeiSearchForRecordsFreeData=0x80123964;
sakeiStartSearchForRecordsRequest=0x801239a0;
sakeiGetMyRecordsValidateInput=0x801239ac;
sakeiGetMyRecordsFillSoapRequest=0x80123a24;
sakeiGetMyRecordsProcessSoapResponse=0x80123ad4;
sakeiGetMyRecordsFreeData=0x80123aec;
sakeiStartGetMyRecordsRequest=0x80123b10;
sakeiGetSpecificRecordsFillSoapRequest=0x80123bbc;
sakeiGetSpecificRecordsProcessSoapResponse=0x80123cb8;
sakeiGetRandomRecordValidateInput=0x80123cf4;
sakeiGetRandomRecordFillSoapRequest=0x80123d6c;
sakeiGetRandomRecordProcessSoapResponse=0x80123e4c;
sakeiGetRandomRecordFreeData=0x80123ed8;

CXInitUncompContextLZ=0x8015BEF0;
CXReadUncompLZ=0x8015BF24;
CXGetUncompressedSize=0x8015C2E0;

IOS_OpenAsync=0x801937E0;
IOS_Open=0x801938F8;
IOS_Close=0x80193AD8;
IOS_Ioctl=0x80194290;

OSPanic=0x801A2660;

OSInitMutex=0x801A7EAC;

OSLockMutex=0x801A7EE4;
OSUnlockMutex=0x801A7FC0;
OSGetTick=0x801AAD74;

OSCreateThread=0x801A9E84;
OSIsThreadTerminated=0x801A98BC;
OSSetSwitchThreadCallback=0x801A95AC;
OSInitMessageQueue=0x801A72FC;
OSDetachThread=0x801AA4EC;
OSResumeThread=0x801aa58c;
OSSuspendThread=0x801aa824;
OSSleepThread=0x801aa9b8;
OSWakeupThread=0x801aaaa4;
OSCancelThread=0x801AA1D4;
onExit__Q23EGG6ThreadFv=0x80008E7C;
onEnter__Q23EGG6ThreadFv=0x80008E80;
OSGetCurrentThread=0x801A98B0;
OSSleepTicks=0x801AACA8;
OSGetTime=0x801aad5c;
__OSGetSystemTime=0x801AAD7C;
OSTicksToCalendarTime=0x801aafa8;

DVDReadPrio=0x8015E834;
DVDOpen=0x8015E2BC;
DVDClose=0x8015E568;

GXGetGPStatus=0x8016CEC4;
GXInit=0x8016B850;
GXGetYScaleFactor=0x8016F6CC;
GXGetNumXfbLines=0x8016F640;
GXSetDispCopySrc=0x8016F438;
GXSetDispCopyDst=0x8016F4B8;
GXSetDispCopyYScale=0x8016F8FC;
GXSetFog=0x801722CC;
GXInitFogAdjTable=0x801724F8;
GXSetFogRangeAdj=0x80172658;
GXInitTexObj=0x801707f8;
GXInitTexObjCI=0x80170a04;
GXInitTexObjLOD=0x80170a4c;

OSRegisterVersion = 0x801A0504;
OSClearContext = 0x801A2098;
OSDisableInterrupts = 0x801A65AC;
OSEnableInterrupts = 0x801A65C0;
OSRestoreInterrupts = 0x801A65D4;
OSRegisterResetFunction = 0x801A8238;
OSSetWirelessID = 0x801A9260;
OSSetCurrentContext = 0x801A1E70;

SIBusy = 0x801B254C;
SIIsChanBusy = 0x801B2568;
SIUnregisterPollingHandler = 0x801B2CF8;
SIGetStatus = 0x801B3050;
SITransfer = 0x801B33EC;
SISetCommand = 0x801B30C8;
SITransferCommands = 0x801B30DC;
SIEnablePolling = 0x801B3148;
SIDisablePolling = 0x801B31D0;
SIGetResponse = 0x801B323c;
SIGetType = 0x801B3808;
SIGetTypeAsync = 0x801B39BC;
SIRefreshSamplingRate = 0x801B3BA4;

VIInit = 0x801B94A4;
VIWaitForRetrace = 0x801B99EC;
VIConfigure = 0x801B9F6C;
VIConfigurePan = 0x801BA650;
VIFlush = 0x801BA9A4;
VISetNextFrameBuffer = 0x801BAAB8;
VIGetNextFrameBuffer = 0x801BAB24;
VISetBlack = 0x801BAB2C;
VIGetRetraceCount = 0x801BABA4;
VIGetNextField = 0x801BABAC;
VIGetCurrentLine = 0x801BAC48;
VIGetTvFormat = 0x801BACD8;
VIGetDTVStatus = 0x801BAD38;
VISetTimeToDimming = 0x801BAFA8;

sub_801BB0D0 = 0x801BB0D0;

SCGetProgressiveMode=0x801B1D84;
SCGetEuRgb60Mode=0x801B1CAC;
SCGetAspectRatio=0x801B1BE4;

NCDGetLinkStatus=0x801D0C6C;
NWC24iStartupSocket=0x801E5FD8;
NWC24iCleanupSocket=0x801E5FE8;
NWC24iLockSocket=0x801E5FF8;
NWC24iUnlockSocket=0x801E6008;
SOInetAtoN=0x801ed82c;
SOInetNtoA=0x801ed938;
SOGetHostByName=0x801edf00;
SOGetInterfaceOpt=0x801EE48C;
SOGetHostID=0x801EDE88;
SOSocket=0x801ecff4;
SOClose=0x801ed0e4;
SOBind=0x801ed188;
SOConnect=0x801ed270;
SOGetSockName=0x801ed358;
SORecvFrom=0x801ed454;
SORecv=0x801ed47c;
SOSendTo=0x801ed4a0;
SOSend=0x801ed4c8;
SOFcntl=0x801ed4ec;
SOShutdown=0x801ed61c;
SOPoll=0x801ed6d0;
SOSetSockOpt=0x801ee388;
SONtoHl=0x801ed98c;
SONtoHs=0x801ed990;
SOHtoNl=0x801ed998;
SOHtoNs=0x801ed99c;

SSLNew=0x801ee668;
SSLConnect=0x801ee7c0;
SSLDoHandshake=0x801ee888;
SSLRead=0x801ee934;
SSLWrite=0x801eec04;
SSLShutdown=0x801eeec4;
SSLSetClientCert=0x801eef70;
SSLSetRootCA=0x801ef0dc;
SSLSetBuiltinRootCA=0x801ef224;
SSLSetBuiltinClientCert=0x801ef2ec;

ParseSingleQR2Reply=0x8011ca4c;
ProcessIncomingReplies=0x8011cc3c;

__cvt_fp2unsigned = 0x80021478;
}

FORCEACTIVE {

initialize__Q23EGG5VideoFPC15GXRenderModeObjPCPC15GXRenderModeObj
getTickPerVRetrace__Q23EGG5VideoFUl
getTickPerVRetrace__Q23EGG5VideoFv

// gsAvailable
GSIStartAvailableCheckA
//GSIAvailableCheckThink

// gsUdpEngine
gsUdpMsgHandlerFree
gsUdpMsgHandlerCompare
gsUdpMsgHandlerCompare2
gsUdpRemotePeerCompare
gsUdpRemotePeerCompare2
gsUdpSocketError
gsUdpClosedRoutingCB
gsUdpConnectedRoutingCB
gsUdpPingRoutingCB
gsUdpReceivedRoutingCB
gsUdpUnrecognizedMsgCB
gsUdpConnAttemptCB
gsUdpEngineIsInitialized
gsUdpEngineInitialize
gsUdpEngineGetPeerState
gsUdpEngineStartTalkingToPeer
gsUdpEngineSendMessage
gsUdpEngineThink
gsUdpEngineShutdown
gsUdpEngineGetLocalPort
gsUdpEngineAddMsgHandler
gsUdpEngineRemoveMsgHandler
gsUdpEngineNoMoreMsgHandlers
gsUdpEngineNoApp
gsUdpEngineGetPeerOutBufferFreeSpace

// gsXML
gsXmlCreateStreamWriter
gsXmlCreateStreamReader
gsXmlParseBuffer
gsXmlFreeWriter
gsXmlFreeReader
gsXmlCloseWriter
gsXmlWriterGetData
gsXmlWriterGetDataLength
gsXmlWriteOpenTag
gsXmlWriteCloseTag
gsXmlWriteStringElement
gsXmlWriteUnicodeStringElement
gsXmlWriteIntElement
gsXmlWriteFloatElement
gsXmlWriteBase64BinaryElement
gsXmlWriteDateTimeElement
gsiXmlUtilWriteXmlSafeString
gsXmlMoveToStart
gsXmlMoveToNext
gsXmlMoveToParent
gsXmlMoveToChild
gsXmlReadChildAsString
gsXmlReadChildAsStringNT
gsXmlReadChildAsHexBinary
gsXmlReadChildAsBase64Binary
gsXmlReadChildAsInt
gsXmlReadChildAsDateTimeElement
gsXmlReadChildAsFloat
gsiXmlUtilTagMatches
gsXmlCountChildren

// gp
gpInitialize
gpDestroy
gpProcess
gpSetCallback
gpConnectPreAuthenticatedA
gpDisconnect
gpProfileSearchA
gpGetInfo
gpSetInfosA
gpSendBuddyRequestA
gpAuthBuddyRequest
gpDenyBuddyRequest
gpGetNumBuddies
gpGetBuddyStatus
gpGetBuddyIndex
gpIsBuddy
gpDeleteBuddy
gpSetStatusA
gpSendBuddyMessageA
gpGetReversBuddiesList
gpGetLoginTicket

// gpi
gpiInitialize
gpiDestroy
gpiReset
gpiProcessConnectionManager
gpiProcess

// gpiBuddy
gpiProcessRecvBuddyMessage
gpiProcessRecvBuddyStatusInfo
gpiSendServerBuddyMessage
gpiSendBuddyMessage
gpiBuddyHandleKeyRequest
gpiBuddyHandleKeyReply
gpiAuthBuddyRequest
gpiFixBuddyIndices
gpiDeleteBuddy

// gpiBuffer
gpiAppendCharToBuffer
gpiAppendStringToBufferLen
gpiAppendStringToBuffer
gpiAppendIntToBuffer
gpiSendOrBufferChar
gpiSendOrBufferStringLenToPeer
gpiSendOrBufferString
gpiRecvToBuffer
gpiSendFromBuffer
gpiSendBufferToPeer
gpiReadMessageFromBuffer
gpiClipBufferToPosition

// gpiCallback
gpiCallErrorCallback
gpiAddCallback
gpiProcessCallbacks

// gpiConnect
gpiConnect
gpiProcessConnect
gpiCheckConnect
gpiDisconnect

// gpiInfo
gpiInfoCacheToArg
gpiProcessGetInfo
gpiAddLocalInfo
gpiSetInfoi
gpiSetInfos
gpiSendGetInfo
gpiGetInfo
gpiFreeInfoCache

// gpiKeys
gpiStatusInfoKeyFree
gpiStatusInfoKeysInit
gpiStatusInfoKeysDestroy
gpiStatusInfoKeyCompFunc
gpiStatusInfoAddKey
gpiStatusInfoSetKey
gpiStatusInfoCheckKey
gpiSaveKeysToBuffer

// gpiOperation
gpiFailedOpCallback
gpiAddOperation
gpiDestroyOperation
gpiRemoveOperation
gpiFindOperationByID
gpiOperationsAreBlocking
gpiProcessOperation

// gpiPeer
gpiPeerSendMessages
gpiCheckTimedOutPeerOperations
gpiDestroyPeer
gpiRemovePeer
gpiProcessPeers
gpiGetPeerByProfile
gpiAddPeer
gpiPeerGetSig
gpiPeerStartConnect
gpiPeerAddMessage
gpiPeerStartTransferMessage
gpiPeerFinishTransferMessage
gpiPeerLeftCallback
gpiPeerMessageCallback
gpiPeerAcceptedCallback
gpiPeerPingReplyCallback
gpiPeerAddOp
gpiPeerRemoveOp

// gpiProfile
GPIInfoCacheFilename
gpiInitProfiles
gpiProcessNewProfile
gpiProfileListAdd
gpiGetProfile
gpiProcessDeleteProfle
gpiRemoveProfileByID
gpiRemoveProfile
gpiFindProfileByUser
gpiProfileMap
gpiFindBuddy
gpiRemoveBuddyStatus
gpiRemoveBuddyStatusInfo
gpiCanFreeProfile

// gpiSearch
gpiProfileSearch
gpiOthersBuddyList
gpiProcessSearches

// gpiTransfer
gpiHandleTransferMessage

// gpiUnique
gpiProcessRegisterUniqueNick
gpiProcessRegisterCdKey

// gpiUtility
strzcpy
gpiCheckForError
gpiValueForKey
gpiCheckSocketConnect
gpiReadKeyAndValue
gpiSetError
gpiSetErrorString
gpiEncodeString

// gt2Auth
gti2GetChallenge
gti2GetResponse
gti2CheckResponse

// gt2Buffer
gti2AllocateBuffer
gti2GetBufferFreeSpace
gti2BufferWriteByte
gti2BufferWriteUShort
gti2BufferWriteData
gti2BufferShorten

// gt2Callback
gti2SocketErrorCallback
gti2ConnectAttemptCallback
gti2ConnectedCallback
gti2ReceivedCallback
gti2ClosedCallback
gti2PingCallback
gti2SendFilterCallback
gti2ReceiveFilterCallback
gti2DumpCallback
gti2UnrecognizedMessageCallback

// gt2Connection
gti2NewOutgoingConnection
gti2NewIncomingConnection
gti2StartConnectionAttempt
gti2AcceptConnection
gti2RejectConnection
gti2ConnectionSendData
gti2ConnectionThink
gti2CloseConnection
gti2ConnectionClosed
gti2ConnectionCleanup

// gt2Main
gt2CreateSocket
gt2CloseSocket
gt2Think
gt2Listen
gt2Accept
gt2Reject
gt2Connect
gt2Send
gt2CloseConnectionHard
gt2CloseAllConnectionsHard
gt2GetConnectionState
gt2GetRemoteIP
gt2GetRemotePort
gt2GetLocalIP
gt2GetLocalPort
gt2GetOutgoingBufferSize
gt2GetOutgoingBufferFreeSpace
gt2GetSocketSOCKET
gt2SetUnrecognizedMessageCallback
gt2SetConnectionData
gt2GetConnectionData

// gt2Socket
gti2SocketFindConnection
gti2CreateSocket
gti2CloseSocket
gti2Listen
gti2NewSocketConnection
gti2FreeSocketConnection
gti2SocketSend
gti2SocketConnectionsThink
gti2FreeClosedConnections
gti2SocketError

// gt2Utility
gt2AddressToString
gt2StringToAddress
gti2MessageCheck

// qr2
qr2_init_socketA
qr2_register_natneg_callback
qr2_register_clientmessage_callback
qr2_register_publicaddress_callback
qr2_think
qr2_send_statechanged
qr2_shutdown
qr2_keybuffer_add
qr2_buffer_add_int
qr2_buffer_addA
qr2_parse_queryA
qr2_check_queries_indata

// qr2RegKeys
qr2_internal_is_master_only_key
qr2_register_keyA

// ghttpBuffer
ghiResizeBuffer
ghiInitBuffer
ghiInitFixedBuffer
ghiFreeBuffer
ghiAppendDataToBuffer
ghiEncryptDataToBuffer
ghiAppendHeaderToBuffer
ghiAppendCharToBuffer
ghiAppendIntToBuffer
ghiResetBuffer
// ghiSendBufferedData

// ghttpCommon
ghiProxyAddress
ghiProxyPort
ghiCreateLock
ghiFreeLock
ghiLock
ghiUnlock
ghiDecryptReceivedData
ghiDoReceive
ghiDoSend

// ghttpConnection
ghiNewConnection
ghiFreeConnection
ghiRequestToConnection
ghiEnumConnections
ghiRedirectConnection
ghiCleanupConnections

// ghttpEncryption
ghttpSetRequestEncryptionEngine
ghiEncryptorSslInitFunc
ghiEncryptorSslCleanupFunc
ghiEncryptorSslStartFunc
ghiEncryptorSslEncryptSend
ghiEncryptorSslDecryptRecv
ghiEncryptorSslEncryptFunc
ghiEncryptorSslDecryptFunc

// ghttpMain
ghttpStartup
ghttpCleanup
ghttpGetExA
ghttpPostA
ghttpThink
ghttpRequestThink
ghttpCancelRequest
ghttpGetHeaders
ghttpSetMaxRecvTime
ghttpNewPost
ghttpPostSetAutoFree
ghttpFreePost
ghttpPostAddFileFromMemoryA
ghttpPostAddXml

// ghttpPost
ghiNewPost
ghiPostSetAutoFree
ghiIsPostAutoFree
ghiFreePost
ghiPostAddFileFromMemory
ghiPostAddXml
ghiPostGetContentType
ghiPostInitState
ghiPostCleanupState
ghiPostDoPosting

// ghttpProcess
ghiDoSocketInit
ghiDoHostLookup
ghiDoLookupPending
ghiDoConnecting
ghiDoSecuringSession
ghiDoSendingRequest
ghiDoPosting
ghiDoWaiting
ghiDoReceivingStatus
ghiDoReceivingHeaders
ghiDoReceivingFile

// gbucket
BucketNew
BucketSet
BucketAdd
BucketSub
BucketMult
BucketDiv
BucketConcat
BucketAvg

// gstats
CloseStatsConnection
IsStatsConnected
PersistThink

// sb_crypt
GOACryptInit
GOADecrypt

// sb_queryengine
SBQueryEngineInit
SBQueryEngineSetPublicIP
SBEngineHaltUpdates
SBEngineCleanup
SBQueryEngineUpdateServer
ParseSingleQR2Reply
ProcessIncomingReplies
SBQueryEngineThink
SBQueryEngineAddQueryKey
SBQueryEngineRemoveServerFromFIFOs

// sb_server
SBRefStrHash
SBRefStrHashCleanup
SBServerFree
SBServerAddKeyValue
SBServerAddIntKeyValue
SBServerGetStringValueA
SBServerGetIntValueA
SBServerGetFloatValueA
SBServerGetPublicAddress
SBServerGetPublicInetAddress
SBServerGetPublicQueryPort
SBServerGetPublicQueryPortNBO
SBServerHasPrivateAddress
SBServerGetPrivateAddress
SBServerGetPrivateInetAddress
SBServerGetPrivateQueryPort
SBServerSetNext
SBServerGetNext
SBServerParseKeyVals
SBServerParseQR2FullKeysSingle
SBServerParseQR2FullKeysSplit
SBAllocServer
SBServerSetFlags
SBServerSetPrivateAddr
SBServerSetICMPIP
SBServerSetState
SBServerGetState
SBIsNullServer

// sb_serverbrowsing
ServerBrowserNewA
ServerBrowserFree
ServerBrowserBeginUpdate2
ServerBrowserLimitUpdateA
ServerBrowserSendMessageToServerA
ServerBrowserSendNatNegotiateCookieToServerA
ServerBrowserRemoveServer
ServerBrowserThink
ServerBrowserClear
ServerBrowserState
ServerBrowserGetServer
ServerBrowserCount
ServerBrowserSortA
ServerBrowserGetMyPublicIPAddr

// sakeMain
sakeStartup
sakeShutdown
sakeSetGame
sakeSetProfile
sakeGetStartRequestResult
sakeCreateRecord
sakeUpdateRecord
sakeSearchForRecords
sakeGetMyRecords
sakeSetFileDownloadURL
sakeGetFileDownloadURL
sakeSetFileUploadURL
sakeGetFileResultFromHeaders
sakeGetFileIdFromHeaders

}
